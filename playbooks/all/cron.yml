---

- name: run cron from runit
  hosts: all
  vars:
    srv: cron
  become: true
  tasks:
  - name: add {{ srv }} runsv directory
    ansible.builtin.file:
      path: '/etc/sv/{{ srv }}'
      state: directory
      mode: '0755'
  - name: add {{ srv }} runsv file
    ansible.builtin.template:
      src: '../../templates/runit/{{ srv }}_run'
      dest: '/etc/sv/{{ srv }}/run'
      owner: root
      group: wheel
      mode: '0755'
  - name: enable {{ srv }} boot
    ansible.builtin.file:
      src: '/etc/sv/{{ srv }}'
      dest: '/var/service/{{ srv }}'
      state: link
  - name: disable {{ srv }} rc.conf
    community.general.sysrc:
      name: '{{ srv }}_enable'
      value: "no"
    register: sysrc
  - name: kill {{ srv }} for runit takeover
    ansible.builtin.service:
      name: '{{ srv }}'
      state: stopped
    when: sysrc.changed
  - name: create root cronjob repo
    ansible.builtin.file:
      path: /root/cronjobs
      state: directory
  - name: add cronjob scripts
    ansible.builtin.template:
      src: "../../templates/root/cronjobs/{{ item }}"
      dest: "/root/cronjobs/{{ item }}"
      mode: 0644
    loop:
      - snapshots.sh
  - name: check host-specific cronjobs file exists for {{ ansible_fqdn }}
    local_action: "stat path=../../hostfiles/cronjobs.local/{{ ansible_fqdn }}"
    register: cronjobs_local
  - name: add host-specific cronjobs if exists
    ansible.builtin.template:
      src: "../../hostfiles/cronjobs.local/{{ ansible_fqdn }}"
      dest: /etc/cron.d/cronjobs.local
      owner: root
      group: wheel
      mode: '0644'
    when: cronjobs_local.stat.exists
    register: local_template
  - name: restart {{ srv }} for new crontabs
    community.general.runit:
      name: '{{ srv }}'
      state: reloaded
    when: local_template.changed
